v <- M%*%v
v
v <- M%*%v
v
v <- M%*%v
v
sum(v)
d <- c(0,1/3,1/3,1/3,1,0,0,0,0,1/2,0,1/2,1/2,1/2,0,0)
M <- matrix(d,4,4)
M
v <- rep(1/4,4)
sum(v)
d <- c(0,1/3,1/3,1/3,0,0,0,0,0,1/2,0,1/2,1/2,1/2,0,0)
M <- matrix(d,4,4)
M
v <- rep(1/4,4)
v
v <- M%*%v
v
v <- M%*%v
v
v <- M%*%v
v
v <- M%*%v
v
v <- M%*%v
v
## 4.2.5
data(kyphosis)
## 4.2.5
library(gam)
data(kyphosis)
install.packages(gam)
install.package('gam')
install.packages('gam')
## 4.2.5
library(gam)
install.package('gam')
install.packages('gam')
## 4.2.5
library(gam)
data(kyphosis)
kuphosis <- data(kyphosis)
kyphosis <- data(kyphosis)
kyphosis <- data(kyphosis)
kyphosis
data(kyphosis)
kyphosis
summary(kyphosis)
set.seed(784); library("rpart")
z.kyph <- rpart(Kyphosis ~ Age + Number + Start, data = kyphosis)
print(z.kyph)
sumamry(z.kyph)
summary(z.kyph)
z.kyph
0.76731 + 0.0077009
## 6
library(rpart)
sdata <- read.csv('sdata.csv')
predict(rpart(age ~ sbp + smokenow + pulse,
data = na.omit(sdata), cp = Inf))[1]
mytree <- rpart(age ~ sbp + smokenow + pulse,
data = na.omit(sdata), cp = Inf)
printcp(mytree)
n2 <- 198 + 7
n1 <- 3521+135
n2 <- 198 + 7
n <- n1+ n2
-2(n1*log2(n1/n)+n2*log(n2/n))
-2*(n1*log2(n1/n)+n2*log(n2/n))
-2*(n1*log2(n1/n)+n2*log2(n2/n))
-2*(n1*log(n1/n)+n2*log(n2/n))
-2*(n1*log2(n1/n)+n2*log2(n2/n))
-2*(n1*log10(n1/n)+n2*log10(n2/n))
-2*(n1*log(n1/n)+n2*log(n2/n))
?log
-2*(n1*log(n1/n)+n2*log(n2/n))
-2*n1*log(n1/n) -2*n2*log(n2/n))
-2*n1*log(n1/n) -2*n2*log(n2/n)
(0.99343 - 1)/0.01739
t =  (0.99343 - 1)/0.01739
?qt
2*(1 - dt(t,38))
2*(1 - dt(abs(t),38))
t
abs(t)
2*(1 - pt(abs(t),38))
2*(1 - pt(t),38))
2*(1 - pt(t),38)
t =  (0.99343 - 1)/0.01739
2*(1 - pt(t,38)
t =  (0.99343 - 1)/0.01739
2*(1 - pt(t,38)
2*(1 - pt(t,38))
t =  (0.99343 - 1)/0.01739
2*(1 - pt(t,38))
2*(1 - pt(abs(t),38))
pnorm(1)
dnorm(1)
dnorm(2)
pnorm(2)
t
t =  (0.99343 )/0.01739
2*(1 - pt(abs(t),38))
t =  (0.99343 )/0.01739
(1 - pt(abs(t),38))
t
?simulate
225*0.16 +
225*0.16
225*0.16 +97 *(0.3093+0.29897) + 106*0.39623 + 204*(0.39706+0.02451) + 472*(1-0.86409)
225*0.16 +97 *(0.3093+0.29897) + 106*0.39623 + 204*(0.39706+0.02451) + 3473*(1-0.86409)
225*0.16 +97 *(0.03093+0.29897) + 106*0.39623 + 204*(0.39706+0.02451) + 3473*(1-0.86409)
879*0.00536+3473*0.00633
4105*0.00536
p =0.60377
2*106*p*(1-p)
81*0.209877
36+32+106*0.39623+86+472
106*0.39623
106*0.39623
204*ï¼ˆ0.02451+0.39706)
204*(0.02451+0.39706)
106*0.39623
log10(2) + log10(5)
?zero\
library(VLAM)
library(VGAM)
TypicalVGAMfamilyFunction
??TypicalVGAMfamilyFunction
0.7*0.05/(0.7*0.05+0.05*0.95)
12.2206+1.4749*4.5
12.2206+1.4749*3
#2
D =3
lambda =2.7596
mu = 12.2206+ 1.4749*D
sigma = exp(-2.6814)
qnorm(0,5)
qnorm(0.5)
log(1,base=lambda)
mu = 12.2206+ 1.4749*D
lambda =2.7596
mu = 12.2206+ 1.4749*D
mu
sigma = exp(-2.6814)
#2
D =3
lambda =2.7596
mu = 12.2206+ 1.4749*D
mu
sigma = exp(-2.6814)
sigma
0.7*0.05/(0.7*0.05+0.05*0.95)
0.7 * 0.05/(0.7 * 0.05 + 0.05 * 0.95)
36+21+131+179
21.40/0.01281
20.45/0.08687
4^3
64*3
5*3
5^3
125*3
x <- c('ABC','ABc','abC','abc')
y <- c('ABC','ABc','abC','abc')
expand.grid(x,y)
name = expand.grid(x,y)
paste(name$Var1,name$Var2)
paste(name$Var1,name$Var2,'')
?paste
paste(name$Var1,name$Var2,sep='')
paste(name$Var1,name$Var2,sep='')
z<-paste(name$Var1,name$Var2,sep='')
f2<-paste(name$Var1,name$Var2,sep='')
table(f2)
f2 <-paste(sort(unlist(strsplit(f2,""))),collapse = "")
table(f2)
f2
f2<-paste(name$Var1,name$Var2,sep='')
f2
f2 <-sapply(f2,paste(sort(unlist(strsplit(x,""))),collapse = ""))
name = expand.grid(x,y)
f2<-paste(name$Var1,name$Var2,sep='')
f2 <-sapply(f2,paste(sort(unlist(strsplit(x,""))),collapse = ""))
f2<-paste(name$Var1,name$Var2,sep='')
f2 <-sapply(f2,function(x) paste(sort(unlist(strsplit(x,""))),collapse = ""))
table(f2)
contributors()
x <- c('ABC','ABc','abC','abc')
y <- c('ABC','ABc','abC','abc')
name = expand.grid(x,y)
name
f2<-paste(name$Var1,name$Var2,sep='')
f2
table(f2)
f2 <-sapply(f2,function(x) paste(sort(unlist(strsplit(x,""))),collapse = ""))
f2
table(f2)
x <- c('ABC','ABc','abC','abc')
y <- c('ABC','ABc','abC','abc')
name = expand.grid(x,y)
f2<-paste(name$Var1,name$Var2,sep='')
f2 <-sapply(f2,function(x) paste(sort(unlist(strsplit(x,""))),collapse = ""))
table(f2)
2^16
2^32
2^32-1
2^31 -1
2^31 -1 < 10000000007
setwd("~/canvas/stats769")
setwd("~/canvas/stats769/lab0")
read.csv('AugustTraffic-OLD.csv')
August <- read.csv('AugustTraffic-OLD.csv')
august <- read.csv('AugustTraffic-OLD.csv')
head(august)
dim(august)
august$startDatetime<'08'
substr(august$startDatetime,1,3)
substr(august$startDatetime,1,6)
substr(august$startDatetime,1,2)
substr(august$startDatetime,1,2) >"07"
substr(august$startDatetime,1,2) <"08"
count(substr(august$startDatetime,1,2) <"08")
sum(substr(august$startDatetime,1,2) <"08")
august(substr(august$startDatetime,1,2) <"08"[1])
august[substr(august$startDatetime,1,2) <"08"][1]
august[substr(august$startDatetime,1,2) <"08",][1]
august[substr(august$startDatetime,1,2) <"08",]
head(august[substr(august$startDatetime,1,2) <"08",],1)
august8 <- august[substr(august$startDatetime,1,2) ="08",]
august8 <- august[substr(august$startDatetime,1,2) =="08",]
head(august8)
tail(august8)
# Explore
count <- density(August$count)
plot(count)
plot(count,main="")
desity
count
count.small <- density(August$count[August$count<=12])
plot(count.small,main="")
count.small <- density(August$count[August$count<=10])
plot(count.small,main="")
boxplot(count ~ start$hour, august8, xlab="Hour")
# Explore
count <- density(August$count)
plot(count,main="")
# Explore
count <- density(August8$count)
plot(count,main="")
# Explore
count <- density(August8$count)
# Explore
count <- density(august8$count)
plot(count,main="")
count.small <- density(August8$count[August8$count<=10])
count.small <- density(august8$count[august8$count<=10])
plot(count.small,main="")
names(august8)
start$hour
start$hour<- 1
start$hour
substr(august$startDatetime,13,18)
end<- substr(august8$endDatetime,13,18)
end - start
augsut8
august8
?date
start <- date(august8$startDatetime)
start <- as.date(august8$startDatetime)
start <- as.Date(august8$startDatetime)
?as.Date
start <- as.Date(august8$startDatetime,"%d-%B-%Y ")
start
unclass(as.POSIXlt(today))
today <- Sys.time()
unclass(as.POSIXlt(today))
start <- as.Date(august8$startDatetime,"%d-%B-%Y h:m")
start
start <- as.Date(august8$startDatetime,"%d-%B-%Y %h:%m")
start
contertdt <- function(dtimes){
dtparts = t(as.data.frame(strsplit(dtimes,' ')))
row.names(dtparts) = NULL
thetimes = chron(dates=dtparts[,1],times=dtparts[,2],
format=c('d-B-d','h:m'))
}
convertdt <- function(dtimes){
dtparts = t(as.data.frame(strsplit(dtimes,' ')))
row.names(dtparts) = NULL
thetimes = chron(dates=dtparts[,1],times=dtparts[,2],
format=c('d-B-d','h:m'))
}
start <- convertdt(august8$startDatetime)
august8$startDatetime
strsplit(august$startDatetime,' ')
strsplit(august$startDatetime," ")
convertdt <- function(dtimes){
dtimes <- as.string(dtimes)
dtparts = t(as.data.frame(strsplit(dtimes,' ')))
row.names(dtparts) = NULL
thetimes = chron(dates=dtparts[,1],times=dtparts[,2],
format=c('d-B-d','h:m'))
}
start <- convertdt(august8$startDatetime)
convertdt <- function(dtimes){
dtimes <- as.character(dtimes)
dtparts = t(as.data.frame(strsplit(dtimes,' ')))
row.names(dtparts) = NULL
thetimes = chron(dates=dtparts[,1],times=dtparts[,2],
format=c('d-B-d','h:m'))
}
start <- convertdt(august8$startDatetime)
libray(chron)
library(chron)
library('chron')
start <- as.POSIXlt(august8$startDatetime)
type(august8$startDatetime)
class(august8$startDatetime)
start <- as.POSIXlt(as.character(august8$startDatetime))
start <- strptime(as.character(august8$startDatetime))
start <- strptime(as.character(august8$startDatetime),"%d-%b-%Y %H:%M")
start
start
View(august8)
View(august8)
as.character(august8$startDatetime)
start <- strptime(as.character(august8$startDatetime),"%d-%b-%Y %H:%M")
start
cealr
clear
as.character(august8$startDatetime)
start <- strptime(as.character(august8$startDatetime[1]),"%d-%b-%Y %H:%M")
start
08-AUG-2020 23:15
start <- strptime(substr(august8$startDatetime[1],1,12),"%d-%b-%Y")
start
substr(august8$startDatetime[1],1,12)
start <- strptime(substr(august8$startDatetime[1],1,12),"%d-%b-%Y ")
start
start <- strptime(substr(august8$startDatetime[1],12,14),"%H:%M")
substr(august8$startDatetime[1],12,14)
substr(august8$startDatetime[1],13,16)
substr(august8$startDatetime[1],13,17)
start <- strptime(substr(august8$startDatetime[1],13,17),"%H:%M")
start
august8$startDatetime[1]
august8$startDatetime
start <- strptime(substr(august8$startDatetime,13,17),"%H:%M")
start
start <- strptime(august8$startDatetime,"%H:%M")
start
?as.POSIXct
start <- strptime(august8$startDatetime,"%d-%b-%Y %H:%M")
start
start <- strptime(august$startDatetime,"%d-%b-%Y %H:%M")
start
start <- strptime(august$startDatetime,"%d-%B-%Y %H:%M")
start
start <- strptime(august$startDatetime,"%d-AUG-2020  %H:%M")
start
start <- strptime(august$startDatetime,"%d-%B-2020  %H:%M")
start
start <- strptime(august$startDatetime,"%d-AUG-%Y %H:%M")
start
start <- as.POSIXlt(august8$startDatetime,"%d-AUG-%Y %H:%M")
end <- as.POSIXlt(august8$endDatetime,"%d-AUG-%Y %H:%M")
end - start
start <- as.POSIXlt(august8$startDatetime,"%d-AUG-%Y %H:%M")
start <- as.POSIXlt(as.character(august8$startDatetime),"%d-AUG-%Y %H:%M")
start <- as.POSIXlt(august8$startDatetime,"%d-AUG-%Y %H:%M")
start <- strptime(august8$startDatetime),"%d-AUG-%Y %H:%M")
end <- strptime(august8$endDatetime,"%d-AUG-%Y %H:%M")
end - start
start
end
length(start)
length(end)
august <- read.csv('AugustTraffic-OLD.csv')
head(august)
dim(august)
#Tidy
sum(substr(august$startDatetime,1,2) <"08")
head(august[substr(august$startDatetime,1,2) <"08",],1)
august8 <- august[substr(august$startDatetime,1,2) =="08",]
# Explore
count <- density(august8$count)
plot(count,main="")
start <- strptime(august8$startDatetime),"%d-AUG-%Y %H:%M")
end <- strptime(august8$endDatetime,"%d-AUG-%Y %H:%M")
start <- strptime(august8$startDatetime),"%d-AUG-%Y %H:%M")
start <- strptime(august8$startDatetime),"%d-AUG-%Y %H:%M")
end <- strptime(august8$endDatetime,"%d-AUG-%Y %H:%M")
end - start
end
str(august8$startDatetime)
start <- strptime(august8$startDatetime),"%d-AUG-%Y %H:%M")
august <- read.csv('AugustTraffic-OLD.csv')
head(august)
dim(august)
#Tidy
sum(substr(august$startDatetime,1,2) <"08")
august8 <- august[substr(august$startDatetime,1,2) =="08",]
start <- strptime(august8$startDatetime),"%d-AUG-%Y %H:%M")
start <- strptime(august8$startDatetime,"%d-AUG-%Y %H:%M")
end <- strptime(august8$endDatetime,"%d-AUG-%Y %H:%M")
end - start
hours <-end - start
str(hours)
summary(hours)
max(hours)
max(as.integer(hours))
start
start_hours <-start$hour
start_hours
august <- read.csv('AugustTraffic-OLD.csv')
head(august)
dim(august)
august8 <- august[substr(august$startDatetime,1,2) =="08",]
start_hours <-august$startDatetime$hour
start <- strptime(august8$startDatetime,"%d-AUG-%Y %H:%M")
start_hours <-startDatetime$hour
as.data.frame(c(august8,start=start))
aas.data.frame(c(august8,start=as.list(start))
5
as.data.frame(c(august8,start=as.list(start))
as.data.frame(c(august8,start=as.list(start)))
as.data.frame(c(august8,start=as.list(start)))
start <- strptime(august8$startDatetime,"%d-AUG-%Y %H:%M")
end <- strptime(august8$endDatetime,"%d-AUG-%Y %H:%M")
boxplot(count ~ start$hour, august8, xlab="Hour")
## Transform
dim(august8day)
## Transform
start$hour < 8
start$hour >18
## Transform
8day  <- start$hour < 8 | start$hour >18
## Transform
august8day  <- start$hour < 8 | start$hour >18
august8day <-august8[!august8day,]
dim(august8day)
head(august8day)
class(start)
start <- as.POSIXct(strptime(august8$startDatetime,"%d-AUG-%Y %H:%M"))
august <- read.csv('AugustTraffic-OLD.csv')
head(august)
dim(august)
#Tidy
sum(substr(august$startDatetime,1,2) <"08")
head(august[substr(august$startDatetime,1,2) <"08",],1)
august8 <- august[substr(august$startDatetime,1,2) =="08",]
start <- as.POSIXct(strptime(august8$startDatetime,"%d-AUG-%Y %H:%M"))
start
names(start)
start$
asdfa
## Transform
august8day  <- start$hour < 8 | start$hour >18
start <- strptime(august8$startDatetime,"%d-AUG-%Y %H:%M")
start
names(start)
start <- strptime(august8$startDatetime,"%d-AUG-%Y %H:%M")
names(start)
class(start)
## Transform
august8day  <- start$hour < 8 | start$hour >18
boxplot(count ~ start$hour, august8, xlab="Hour")
august8day <-august8[!august8day,]
dim(august8day)
head(august8day)
august8day <-data.frame(c(august8,start))[!august8day,]
data.frame(c(august8,start))
august8day <-data.frame(c(august8,start))
## Transform
august8day  <- start$hour < 8 | start$hour >18
august8day <-data.frame(c(august8,start))
august8day
august8day <-data.frame(c(august8,start=as.POSIXct(start)))
## Transform
august8day  <- start$hour < 8 | start$hour >18
august8day <-data.frame(c(august8,start=as.POSIXct(start)))
start <- strptime(august8$startDatetime,"%d-AUG-%Y %H:%M")
## Transform
august8day  <- start$hour < 8 | start$hour >18
start=as.POSIXct(start)
august8day <-data.frame(august8,start=start)
august8day <-data.frame(august8,start=start)[!august8day,]
## Transform
august8day  <- start$hour < 8 | start$hour >18
start <- strptime(august8$startDatetime,"%d-AUG-%Y %H:%M")
## Transform
august8day  <- start$hour < 8 | start$hour >18
start=as.POSIXct(start)
august8day <-data.frame(august8,start=start)[!august8day,]
dim(august8day)
head(august8day)
august8day <- data.frame(august8day,scount=august8day$count^2)
dim(august8day)
head(august8day)
?sqrt
start <- strptime(august8$startDatetime,"%d-AUG-%Y %H:%M")
## Transform
august8day  <- start$hour < 8 | start$hour >18
august8day <-data.frame(august8,start=start.ct)[!august8day,]
august8day <- data.frame(august8day,scount=sqrt(august8day$count))
start.ct=as.POSIXct(start)
august8day <-data.frame(august8,start=start.ct)[!august8day,]
august8day <- data.frame(august8day,scount=sqrt(august8day$count))
dim(august8day)
head(august8day)
sessionInfo()
